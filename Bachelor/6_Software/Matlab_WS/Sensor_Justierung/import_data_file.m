function [t1,a_x1,a_y1,a_z1,w_x1,w_y1,w_z1,t2,a_x2,a_y2,a_z2,w_x2,w_y2,w_z2,t3,a_x3,a_y3,a_z3,w_x3,w_y3,w_z3,t4,a_x4,a_y4,a_z4,w_x4,w_y4,w_z4,t5,a_x5,a_y5,a_z5,w_x5,w_y5,w_z5,t6,a_x6,a_y6,a_z6,w_x6,w_y6,w_z6] = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [T1,A_X1,A_Y1,A_Z1,W_X1,W_Y1,W_Z1,T2,A_X2,A_Y2,A_Z2,W_X2,W_Y2,W_Z2,T3,A_X3,A_Y3,A_Z3,W_X3,W_Y3,W_Z3,T4,A_X4,A_Y4,A_Z4,W_X4,W_Y4,W_Z4,T5,A_X5,A_Y5,A_Z5,W_X5,W_Y5,W_Z5,T6,A_X6,A_Y6,A_Z6,W_X6,W_Y6,W_Z6]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [T1,A_X1,A_Y1,A_Z1,W_X1,W_Y1,W_Z1,T2,A_X2,A_Y2,A_Z2,W_X2,W_Y2,W_Z2,T3,A_X3,A_Y3,A_Z3,W_X3,W_Y3,W_Z3,T4,A_X4,A_Y4,A_Z4,W_X4,W_Y4,W_Z4,T5,A_X5,A_Y5,A_Z5,W_X5,W_Y5,W_Z5,T6,A_X6,A_Y6,A_Z6,W_X6,W_Y6,W_Z6]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [t1,a_x1,a_y1,a_z1,w_x1,w_y1,w_z1,t2,a_x2,a_y2,a_z2,w_x2,w_y2,w_z2,t3,a_x3,a_y3,a_z3,w_x3,w_y3,w_z3,t4,a_x4,a_y4,a_z4,w_x4,w_y4,w_z4,t5,a_x5,a_y5,a_z5,w_x5,w_y5,w_z5,t6,a_x6,a_y6,a_z6,w_x6,w_y6,w_z6] = importfile('sensor_calib_data_phi2_0.csv',2, 1052);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/02/15 20:27:32

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
t1 = dataArray{:, 1};
a_x1 = dataArray{:, 2};
a_y1 = dataArray{:, 3};
a_z1 = dataArray{:, 4};
w_x1 = dataArray{:, 5};
w_y1 = dataArray{:, 6};
w_z1 = dataArray{:, 7};
t2 = dataArray{:, 8};
a_x2 = dataArray{:, 9};
a_y2 = dataArray{:, 10};
a_z2 = dataArray{:, 11};
w_x2 = dataArray{:, 12};
w_y2 = dataArray{:, 13};
w_z2 = dataArray{:, 14};
t3 = dataArray{:, 15};
a_x3 = dataArray{:, 16};
a_y3 = dataArray{:, 17};
a_z3 = dataArray{:, 18};
w_x3 = dataArray{:, 19};
w_y3 = dataArray{:, 20};
w_z3 = dataArray{:, 21};
t4 = dataArray{:, 22};
a_x4 = dataArray{:, 23};
a_y4 = dataArray{:, 24};
a_z4 = dataArray{:, 25};
w_x4 = dataArray{:, 26};
w_y4 = dataArray{:, 27};
w_z4 = dataArray{:, 28};
t5 = dataArray{:, 29};
a_x5 = dataArray{:, 30};
a_y5 = dataArray{:, 31};
a_z5 = dataArray{:, 32};
w_x5 = dataArray{:, 33};
w_y5 = dataArray{:, 34};
w_z5 = dataArray{:, 35};
t6 = dataArray{:, 36};
a_x6 = dataArray{:, 37};
a_y6 = dataArray{:, 38};
a_z6 = dataArray{:, 39};
w_x6 = dataArray{:, 40};
w_y6 = dataArray{:, 41};
w_z6 = dataArray{:, 42};


