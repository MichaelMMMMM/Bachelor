/**
 * @file	CStateEstimate.h
 * @author	Michael Meindl
 * @date	16.02.2017
 * @brief	Class to calculate the state estimates from the sensor values.
 */
#ifndef CSTATEESTIMATE_H
#define CSTATEESTIMATE_H
#include "CPoly1.h"
#include "CStateData.h"
#include "CSensorData.h"

class CStateEstimate
{
public:
	using InputType  = CSensorData;
	using OutputType = CStateData;
public:
	const CStateData& calculateOutput(const CSensorData& input);
	const CStateData& getOutput();
public:
	CStateEstimate();
	CStateEstimate(const CStateEstimate&) = delete;
	CStateEstimate& operator=(const CStateEstimate&) = delete;
	~CStateEstimate() = default;
private:
	CPoly1 mA_X_PolyArr[6];
	CPoly1 mA_Y_PolyArr[6];
	CPoly1 mW_X_PolyArr[6];
	CPoly1 mW_Y_PolyArr[6];
	CPoly1 mADC_PolyArr[3];

	static constexpr Float32 sA_X1_P1 = 0.0005931F;
	static constexpr Float32 sA_X1_P2 = -0.3145;
	static constexpr Float32 sA_X2_P1 = 0.0005944F;
	static constexpr Float32 sA_X2_P2 = -0.2634F;
	static constexpr Float32 sA_X3_P1 = 0.0005942F;
	static constexpr Float32 sA_X3_P2 = -0.1991F;
	static constexpr Float32 sA_X4_P1 = 0.000604F;
	static constexpr Float32 sA_X4_P2 = -0.06702F;
	static constexpr Float32 sA_X5_P1 = 0.0005983F;
	static constexpr Float32 sA_X5_P2 = -0.1744F;
	static constexpr Float32 sA_X6_P1 = 0.0005952F;
	static constexpr Float32 sA_X6_P2 = -0.1953F;
	static constexpr Float32 sA_Y1_P1 = 0.0005999F;
	static constexpr Float32 sA_Y1_P2 = -0.06285F;
	static constexpr Float32 sA_Y2_P1 = 0.0005974F;
	static constexpr Float32 sA_Y2_P2 = 0.05025F;
	static constexpr Float32 sA_Y3_P1 = 0.0006011F;
	static constexpr Float32 sA_Y3_P2 = -0.05404F;
	static constexpr Float32 sA_Y4_P1 = 0.0005926F;
	static constexpr Float32 sA_Y4_P2 = -0.2692F;
	static constexpr Float32 sA_Y5_P1 = 0.0005989F;
	static constexpr Float32 sA_Y5_P2 = -0.007797F;

};

#endif
