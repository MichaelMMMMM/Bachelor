/**
 * @file	COffsetCorrection.cpp
 * @author	Michael Meindl
 * @date	17.02.2017
 * @brief	Method definitions for COffsetCorrection.
 */
#include "COffsetCorrection.h"

COffsetCorrection::COffsetCorrection() : mG1PT1(sHP_GF),
									     mG2PT1(sHP_GF),
										 mG3PT1(sHP_GF),
										 mHPFlag(false)
{

}
const CStateData& COffsetCorrection::calcOutput(const CStateData& input)
{
	mOutput.mGData.mG_k1 = input.mGData.mG_k1 - sG_0 + sG_k1_Offset;
	mOutput.mGData.mG_k2 = input.mGData.mG_k2 - sG_0 + sG_k2_Offset;
	mOutput.mGData.mG_k3 = input.mGData.mG_k3 - sG_0 + sG_k3_Offset;
	mOutput.mUKData = input.mUKData;
	mOutput.mURData = input.mURData;

	if(mHPFlag == true)
	{
		mOutput.mGData.mG_k1 -= mG1PT1.calculateOutput(mOutput.mGData.mG_k1);
		mOutput.mGData.mG_k2 -= mG2PT1.calculateOutput(mOutput.mGData.mG_k2);
		mOutput.mGData.mG_k3 -= mG3PT1.calculateOutput(mOutput.mGData.mG_k3);
	}

	return mOutput;
}
const CStateData& COffsetCorrection::getValue()
{
	return mOutput;
}
void COffsetCorrection::reset()
{
	mG1PT1.reset();
	mG2PT1.reset();
	mG3PT1.reset();
}
void COffsetCorrection::enableHighpass()
{
	mHPFlag = true;
	this->reset();
}
void COffsetCorrection::disableHighpass()
{
	mHPFlag = false;
}
