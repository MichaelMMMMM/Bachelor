#include <iostream>
#include "CMotor.h"
#include "CMPU9250.h"
#include <unistd.h>
#include <cstdlib>
#include <iostream>
#include <sys/time.h>

static void motorTest();
static void mpuTest();

int main()
{
	//motorTest();
	mpuTest();

	return 0;
}

void mpuTest()
{
	CMPU9250 mpu;
	CMPUData sensorData;

	struct timeval timebegin, timeend;
	long seconds, useconds;

	gettimeofday(&timebegin, (struct timezone*)0);

	for(int i = 0; i < 10000; i++)
	{
		if(false == mpu.readSensorData(sensorData))
		{
			std::cout << "Read failed!" << std::endl;
		}
	}

	gettimeofday(&timeend, (struct timezone*)0);
	seconds = timeend.tv_sec - timebegin.tv_sec;
	useconds = timeend.tv_usec - timebegin.tv_usec;
	if(useconds < 0)
	{
		useconds += 1000000;
		seconds--;
	}
	std::cout << "seconds: " << seconds << " useconds: " << useconds << std::endl;

//	while(true)
//	{
//		usleep(100000);
//		if(mpu.readSensorData(sensorData))
//		{
//			sensorData.display();
//		}
//		else
//		{
//			std::cout << "Failed to read MPU" << std::endl;
//		}
//	}
}

void motorTest()
{
	CMotor motor1("4", "0", "67", "66");
	CMotor motor2("4", "1", "68", "69");
	CMotor motor3("1", "0", "44", "45");

	motor3.enableMotor();
	motor3.disableMotor();
	motor3.setTorque(0.04F);
	motor3.setTorque(-0.08F);
}
