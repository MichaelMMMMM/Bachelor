/**
 * @file	TObserver.h
 * @author	Michael Meindl
 * @date	19.04.2017
 * @brief	Template class to calculate a Luenberger-Observer.
 */
#ifndef TOBSERVER_H
#define TOBSERVER_H
#include "TMatrix.h"
#include <string>

template<const UInt32 nX, const UInt32 nY, const UInt32 nU>
class TObserver
{
public:
	using InputType		= TRVector<nY>;
	using OutputType	= TRVector<nX>;
public:
	const OutputType& calcOutput(const InputType& input);
	const OutputType& getValue() const;
	void init(const std::string& aFile,
			  const std::string& bFile,
			  const std::string& cFile,
			  const std::string& lFile);
public:
	TObserver();
	TObserver(const TObserver&) = delete;
	TObserver& operator=(const TObserver&) = delete;
	~TObserver() = default;
private:
	OutputType	mOutput;

	bool		mFirstRun;
};

#endif
