%Michael Meindl, Berechnung der Ausgleichs-Matrizen fuer omega

datafiles = { 'data/gyro_data_phi1_15.csv',...
              'data/gyro_data_phi1_30.csv',...
              'data/gyro_data_phi1_45.csv',...
              'data/gyro_data_phi1_60.csv',...
              'data/gyro_data_phi1_75.csv',...
              'data/gyro_data_phi1_90.csv',...
              'data/gyro_data_phi2_15.csv',...
              'data/gyro_data_phi2_30.csv',...
              'data/gyro_data_phi2_45.csv',...
              'data/gyro_data_phi2_60.csv',...
              'data/gyro_data_phi2_75.csv',...
              'data/gyro_data_phi2_90.csv',...
              'data/gyro_data_phi3_15.csv',...
              'data/gyro_data_phi3_30.csv',...
              'data/gyro_data_phi3_45.csv',...
              'data/gyro_data_phi3_60.csv',...
              'data/gyro_data_phi3_75.csv',...
              'data/gyro_data_phi3_90.csv'};
% datafiles = { 'data/gyro_data_phi1_15.csv',...
%               'data/gyro_data_phi1_30.csv',...
%               'data/gyro_data_phi1_45.csv',...
%               'data/gyro_data_phi1_60.csv',...
%               'data/gyro_data_phi1_75.csv',...
%               'data/gyro_data_phi1_90.csv'};

    
n = length(datafiles);

omega_S1 = 0;


alpha_S1 = zeros(n, 3);
alpha_S2 = zeros(n, 3);
alpha_S3 = zeros(n, 3);
alpha_S4 = zeros(n, 3);
alpha_S5 = zeros(n, 3);
alpha_S6 = zeros(n, 3);

% tx       = degtorad([15; 30; 45; 60; 75; 90;]);
% ty       = degtorad(zeros(6,1));
% tz       = degtorad(zeros(6,1));
tx       = degtorad([15; 30; 45; 60; 75; 90; zeros(12,1)]);
ty       = degtorad([zeros(6,1); 15; 30; 45; 60; 75; 90; zeros(6,1)]);
tz       = degtorad([zeros(12,1); 15; 30; 45; 60; 75; 90]);

A       = cell(6,1);
Bx      = cell(6,1);
By      = cell(6,1);
Bz      = cell(6,1);

S_w     = cell(6,1);
o_w     = cell(6,1);

Ta = 0.02;
i  = 351;

for k = 1:n
    [t1, a_x1, a_y1, a_z1, w_x1, w_y1, w_z1, ...
     t2, a_x2, a_y2, a_z2, w_x2, w_y2, w_z2, ...
     t3, a_x3, a_y3, a_z3, w_x3, w_y3, w_z3, ...
     t4, a_x4, a_y4, a_z4, w_x4, w_y4, w_z4, ...
     t5, a_x5, a_y5, a_z5, w_x5, w_y5, w_z5, ...
     t6, a_x6, a_y6, a_z6, w_x6, w_y6, w_z6] = import_data_file(datafiles{k});    
    alpha_S1(k,:) = Ta*[sum(w_x1), sum(w_y1), sum(w_z1)];
    alpha_S2(k,:) = Ta*[sum(w_x2), sum(w_y2), sum(w_z2)];
    alpha_S3(k,:) = Ta*[sum(w_x3), sum(w_y3), sum(w_z3)];
    alpha_S4(k,:) = Ta*[sum(w_x4), sum(w_y4), sum(w_z4)];
    alpha_S5(k,:) = Ta*[sum(w_x5), sum(w_y5), sum(w_z5)];
    alpha_S6(k,:) = Ta*[sum(w_x6), sum(w_y6), sum(w_z6)];
end

alpha = { alpha_S1, alpha_S2, alpha_S3, alpha_S4, alpha_S5, alpha_S6 };

for k = 1:6
    ax = alpha{k}(:,1);
    ay = alpha{k}(:,2);
    az = alpha{k}(:,3);
   
    A{k} = [ sum(ax.*ax), sum(ax.*ay), sum(ax.*az), sum(ax);...
             sum(ax.*ay), sum(ay.*ay), sum(az.*ay), sum(ay);...
             sum(ax.*az), sum(ay.*az), sum(az.*az), sum(az);...
             sum(ax),     sum(ay)    , sum(az)    , n       ];
    Bx{k} = [sum(tx.*ax); sum(tx.*ay); sum(tx.*az); sum(tx)];
    By{k} = [sum(ty.*ax); sum(ty.*ay); sum(ty.*az); sum(ty)];
    Bz{k} = [sum(tz.*ax); sum(tz.*ay); sum(tz.*az); sum(tz)];
    
    wx    = A{k}\Bx{k};
    wy    = A{k}\By{k};
    wz    = A{k}\Bz{k};
    
    S_w{k} = [wx(1:3)', wx(4)/Ta/i;...
              wy(1:3)', wy(4)/Ta/i;...
              wz(1:3)', wz(4)/Ta/i];
    filename = strcat('calib_data/gyro', num2str(k), '_calib_data.csv');
    csvwrite(filename, S_w{k});
end



    